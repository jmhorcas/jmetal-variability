imports
    EvolutionaryAlgorithm as EAConfig
features
    jMetal
        mandatory
            Problem
                mandatory
                    Integer NumberOfVariables
                    Integer NumberOfObjectives
                    Integer NumberOfConstraints
                    String ProblemName
                optional
                    String ReferenceParetoFront
                    DynamicProblem
                    ProblemType {abstract}
                        alternative
                            BinaryProblem
                                mandatory
                                    Integer TotalNumberOfBits
                                    Integer NumberOfBitsPerVariable cardinality [1..*]
                                optional 
                                    FakeBinaryProblem
                            DoubleProblem
                                optional 
                                    FakeDoubleProblem
                                    ComposableDoubleProblem
                            IntegerProblem
                                optional 
                                    FakeIntegerProblem
                            PermutationProblem
                                optional
                                    FakeIntegerPermutationProblem
                            SequenceProblem
                    Integer Length
            Solution  // Encoding
                mandatory
                    SolutionType {abstract}
                        alternative
                            BinarySolution
                                optional
                                    DefaultBinarySolution
                            CompositeSolution
                            DoubleSolution
                                optional
                                    DefaultDoubleSolution
                                optional 
                                    RepairDoubleSolution
                                        alternative
                                            RepairDoubleSolutionWithBoundValue
                                            RepairDoubleSolutionWithOppositeBoundValue
                                            RepairDoubleSolutionWithRandomValue
                            IntegerSolution
                                optional
                                    DefaultIntegerSolution
                            PermutationSolution
                                optional
                                    IntegerPermutationSolution
                            PointSolution
                            SequenceSolution
                                optional
                                    CharSequenceSolution
            Algorithm
                mandatory
                    AlgorithmType {abstract}
                        alternative 
                            EvolutionaryAlgorithm
                                mandatory
                                    EvolutionaryAlgorithmType {abstract}
                                        alternative 
                                            GeneticAlgorithm
                                                mandatory
                                                    GeneticAlgorithmType {abstract}
                                                        alternative
                                                            NSGAII {desc 'Nondominated Sorting Genetic Algorithm version II'}
                                                                optional
                                                                    NSGAIIVersion
                                                                        alternative 
                                                                            SteadyStateNSGAII {desc 'Steady-State NSGA-II'}
                                                                            NSGAIIMeasures {desc 'NSGA-II with measures'}
                                                                            DNSGAII {desc 'DIR based NSGA-II'}
                                                            NSGAIII
                                                            IBEA {desc 'Indicator Based Evolutionary Algorithm'}
                                                            MOEA
                                            DifferentialEvolution
                                            EvolutionStrategy
                                    Configuration {abstract}
                                        mandatory
                                            EAConfig.EvolutionaryAlgorithm
                            LocalSearch
                            ScatterSearch
                            CoralReefsOptimization
                            ParticleSwarmOptimization
constraints
    FakeBinaryProblem => NumberOfObjectives == 2
    FakeBinaryProblem => NumberOfConstraints == 0
    FakeBinaryProblem => ProblemName == "Fake binary problem" 
    FakeIntegerPermutationProblem => ProblemName == "FakeIntegerPermutationProblem"
    FakeIntegerPermutationProblem => NumberOfConstraints == 0
    Length <=> (PermutationProblem | SequenceProblem)
    DoubleProblem <=> DoubleSolution
    IntegerProblem <=> IntegerSolution
    BinaryProblem <=> BinarySolution
    PermutationProblem <=> PermutationSolution
    SequenceProblem <=> SequenceSolution
    DoubleProblem => EAConfig.SBXCrossover | EAConfig.BLXAlphaCrossover | EAConfig.WholeArithmeticCrossover
    DoubleProblem => EAConfig.PolynomialMutation | EAConfig.LinkedPolynomialMutation | EAConfig.UniformMutation | EAConfig.NonUniformMutation
    BinaryProblem => EAConfig.HUXCrossover | EAConfig.SinglePointCrossover | EAConfig.UniformCrossover
    BinaryProblem => EAConfig.BitFlipMutation
    PermutationProblem => EAConfig.PMXCrossover | EAConfig.CycleCrossover | EAConfig.OXDCrossover | EAConfig.PositionBasedCrossover | EAConfig.EdgeRecombinationCrossover
    PermutationProblem => EAConfig.PermutationSwapMutation | EAConfig.DisplacementMutation | EAConfig.InsertMutation | EAConfig.ScrambleMutation | EAConfig.InversionMutation | EAConfig.SimpleInversionMutation
    BitFlipMutation => EAConfig.MutationProbability == (EAConfig.MutationProbability / TotalNumberOfBits)